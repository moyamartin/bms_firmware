name: CI - STM32

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
    
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
     
  test:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: submodules-init
        uses: snickerbockers/submodules-init@v4
      
      - name: build cppu-test
        uses: cd Test/cpputest/cpputest_build && autoreconf .. -i && ../configure && make cd ../../

      # Runs a set of commands using the runners shell
      - name: Run a unit test
        run: make -B gcov
        
      - name: Codecov
        # You may pin to the exact commit or the version.
        # uses: codecov/codecov-action@239febf655bba88b16ff5dea1d3135ea8663a1f9
        uses: codecov/codecov-action@v1.0.15
        with:
          # User defined upload name. Visible in Codecov UI
          name: CppUTest
          # Repository upload token - get it from codecov.io. Required only for private repositories
          token: ${{ secrets.CODECOV_TOKEN }}
          # Path to coverage file to upload
          file: ./Test/gcov/gcov_report.txt.html
          # Comma-separated list of files to upload
          #files: # Directory to search for coverage reports.
          #directory: # optional
          # Flag upload to group coverage metrics (e.g. unittests | integration | ui,chrome)
          #flags: # optional
          # Write upload file to path before uploading
          #path_to_write_report: # optional
          # Environment variables to tag the upload with (e.g. PYTHON | OS,PYTHON)
          #env_vars: # optional
          # Specify whether or not CI build should fail if Codecov runs into an error during upload
          fail_ci_if_error: true          
          # Specify whether the Codecov output should be verbose 
        
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: arm-none-eabi-gcc
        uses: fiam/arm-none-eabi-gcc@v1
        with:
          release: '9-2019-q4' # The arm-none-eabi-gcc release to use.
      - name: checkout
        uses: actions/checkout@master
      - name: Build
        run: make
       
